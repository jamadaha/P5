# Do not change values in here for local changes
# Add a file called 'override-config.ini' to add what changes you need.

[DATAGENERATOR]
BasePath = "../../Data"
TextPath = "../../Data/InputText/"
LetterPath = "../../Data/RealOutput/"
LetterDownloadPath = "../../Data/"
LetterDownloadName = "data.zip"
LetterDownloadURL = "https://s3.amazonaws.com/nist-srd/SD19/by_class.zip"
TextDownloadURLS = {
	"AChristmasCarol": "https://www.gutenberg.org/files/46/46-0.txt", 
	"PrideandPrejudice": "https://www.gutenberg.org/files/1342/1342-0.txt"
	}
CSVFileName = "../../Data/data.csv"
# Deletes all the content in the folder specified above
PurgePreviousData = True

# Whether the output should contain numbers/letters
# 1 or True for include | 0 or False for don't
# Atleast one of them should be 1 or True
IncludeNumbers = False
IncludeLetters = True

# Choses what format the output is 
## Letter - Output is the letter of the image
## ASCII - The ascii value of the letter
## ZeroIndexed - All letters are assigned decimal value from 0 and up
LetterOutputFormat = "ZeroIndexed"
# Will only generate pictures of letters with above minimum the minimum letter count, and up to max
# As an example given a min of 100 and max of 200, then 
# If there only exists 45 A, then it will be ignored
# If there exists 135 B, then there will be generated 135 B
# If there exists 267 C, then there will be generated 200 C
## To disable set both to 0
## Please don't set max below min
MinimumLetterCount = 0
MaximumLetterCount = 2048

[CGAN]
# Directories for the datasets
TrainDatasetDir = "../../Data/RealOutput/"
TestDatasetDir = ""
# Path of the output images
OutputDir = "../../Data/Experiment2/Noise/{TIMESTAMP}/FakeOutput/"
# Path to save a copy of this config
#	Note: End with '/' to keep same filename, or end without it to also give the file name
ConfigCopyPath = "../../Data/Experiment2/Noise/{TIMESTAMP}/"
# Formatting settings
ImageSize = 28
BatchSize = 32
LatentDimension = 128
EpochCount = 40
# How often to refresh the UI under training
#    Note: low value will slow the training down
RefreshUIEachXIteration = 30
# How many images the trained generator should make
# It generates this amount of images for each type
NumberOfFakeImagesToOutput = 100
CheckpointPath = "../../Data/Experiment2/Noise/{TIMESTAMP}/checkpoints/"
# Where to store the latest restorepoint to resume from
LatestCheckpointPath = "../../Data/Experiment2/Noise/checkpoints/baseRunConfigRef.txt"
# Save the model of the CGAN pr epoch
SaveCheckpoints = True
# If a checkpoint exist, use it, if not just train
UseSavedModel = False
# Directory of log output
LogPath = "../../Data/Experiment2/Noise/{TIMESTAMP}/Logs/"
# How much of the dataset should be training and testing data
DatasetSplit = 1
# How good a image have to be to be determined as "good" (0-1)
#AccuracyThreshold = 0.5
# Scheduler
## "Constant" - Uses the numbers below
## "ExponentialDecay" - Uses https://www.tensorflow.org/api_docs/python/tf/keras/optimizers/schedules/ExponentialDecay
LRScheduler = "Constant"
# The rate of change for learning
LearningRateDiscriminator = 0.0003
LearningRateGenerator = 0.0003